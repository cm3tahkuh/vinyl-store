generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Role {
  id       Int    @id @default(autoincrement())
  roleName String @unique
  User     User[]
}

model User {
  id        Int       @id @default(autoincrement())
  login     String    @unique
  password  String
  roleId    Int
  Cart      Cart?
  Sale      Sale[]
  role      Role      @relation(fields: [roleId], references: [id])
  deletedAt DateTime?
}

model Cart {
  id       Int        @id @default(autoincrement())
  userId   Int        @unique
  User     User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  CartItem CartItem[]
  deletedAt DateTime?
}

model CartItem {
  id        Int       @id @default(autoincrement())
  productId Int
  cartId    Int
  cart      Cart      @relation(fields: [cartId], references: [id], onDelete: Cascade)
  product   Product   @relation(fields: [productId], references: [id])
  quantity  Int
  deletedAt DateTime?
}

model Product {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  price       Int
  quantity    Int
  image       String
  createdAt   DateTime   @default(now())
  cartItems   CartItem[]
  saleItems   SaleItem[]
  deletedAt   DateTime?
}

model Sale {
  id         Int        @id @default(autoincrement())
  userId     Int
  soldAt     DateTime   @default(now())
  totalPrice Int
  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  SaleItem   SaleItem[]
}

model SaleItem {
  id        Int     @id @default(autoincrement())
  productId Int
  saleId    Int
  quantity  Int
  price     Int
  sale      Sale    @relation(fields: [saleId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}
